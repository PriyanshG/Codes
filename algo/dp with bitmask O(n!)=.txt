#include<bits/stdc++.h>
using namespace std;
/*
#include<boost/multiprecision/cpp_int.hpp>
namespace mp=boost::multiprecision;
using namespace mp;*/
//cpp_int

#define mem(A) memset(A,0,sizeof(A))
#define mem1(A) memset(A,-1,sizeof(A));
#define loop(i,a,n) for(long long i=a;i<n;i++)
#define pb push_back
#define mkp make_pair
#define prq priority_queue
#define fir first
#define sec second
#define all(A) A.begin(),A.end()
#define mod 1000000007
#define take(t) ll t;cin>>t;while(t--)
#define en "\n"

typedef long long ll;
typedef pair<ll,ll> pll;

ll n,tot,B[21][21]={0};
ll M[10000005];
ll func(vector<ll> A[],ll mask)
{
    ll x=__builtin_popcountll(mask);
    if(x==n && mask==tot)
        return 1;
    if(M[mask]==-1)
    {
        ll ans=0;
        loop(j,0,n)
        {
            if(B[x][j] && !(mask&(1<<j)))
                ans+=func(A,mask|(1<<j));
        }
        M[mask]=ans;
    }
    return M[mask];
}
int main()
{   //freopen("input.txt", "r", stdin);
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);

    take(t)
    {
        cin>>n;
        vector<ll> A[n];
        mem(B);
        mem1(M);
        tot=pow(2,n)-1;

        loop(i,0,n)
        {
            loop(j,0,n)
            {
                cin>>B[i][j];
                if(B[i][j])
                    A[j].pb(i);
            }
        }

        cout<<func(A,0)<<endl;
    }
}
