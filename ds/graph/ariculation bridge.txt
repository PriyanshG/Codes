#include<bits/stdc++.h>
using namespace std;

#define mem(A) memset(A,0,sizeof(A))
#define loop(i,a,n) for(long long i=a;i<n;i++)
#define pb push_back
#define mkp make_pair
#define prq priority_queue
#define fir first
#define sec second
#define all(A) A.begin(),A.end()
#define mod 1000000007
#define take(t) ll t;cin>>t;while(t--)

typedef long long ll;
typedef pair<ll,ll> pll;
ll c=1;
ll P[100001],V[100001],L[100001],T[100001],C[100001],ans[101]={0};
set<pll> S;
void dfs(vector<ll> A[],ll x)
{
    V[x]=1;
    L[x]=T[x]=c++;
    loop(i,0,A[x].size())
    {
        ll y=A[x][i];
        if(y!=P[x])
        {
            if(!V[y])
            {
                C[x]++;
                P[y]=x;
                dfs(A,y);
                L[x]=min(L[x],L[y]);
                if(L[y]>T[x])
                {
                    if(x<y)
                        S.insert(mkp(x,y));
                    else
                        S.insert(mkp(y,x));
                }
            }
            else
                L[x]=min(L[x],L[y]);

        }

    }

}
int main()
{   //freopen("input.txt", "r", stdin);
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);

    ll n,m,a,b;
    cin>>n>>m;
    vector<ll> A[n+1];
    ll E[n+1];
    map<ll,pll> M;
    loop(i,0,m)
    {
        cin>>a>>b;
        if(a<b)
         M[i]=mkp(a,b);
        else
        M[i]=mkp(b,a);
        A[a].pb(b);
        A[b].pb(a);
    }
    loop(i,1,n+1)
     E[i]=A[i].size();
    P[1]=-1;
    loop(i,1,n+1)
    {
        if(V[i]==0)
        {
            P[i]=-1;
            dfs(A,i);
        }
    }

    ll x,q;
   cin>>q;
    while(q--)
    {
        cin>>x;
        x--;
        if(S.find(M[x])==S.end())
            cout<<"Happy\n";
        else
            cout<<"Unhappy\n";
    }

/*for(auto it:S)
    cout<<it.fir<<" "<<it.sec<<endl;
*/
}



